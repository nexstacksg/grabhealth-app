# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.12.4
    - name: Setup environment files
      run: |
        # Copy .env files from /root/ to project directories
        # Source files: .app-strapi.env, .app-web.env
        # Target: .env in each respective app directory
        
        # Debug: List files in /root/
        echo "Listing /root/ directory:"
        ls -la /root/ | grep -E "\.env|\.app" || true
        
        # Check each file individually for better error reporting
        if [ ! -f "/root/.app-strapi.env" ]; then
          echo "Error: /root/.app-strapi.env not found"
          exit 1
        fi
        
        if [ ! -f "/root/.app-web.env" ]; then
          echo "Error: /root/.app-web.env not found"
          exit 1
        fi
        
        echo "All source .env files found successfully"
        
        # Copy and rename to .env with restricted permissions
        cp /root/.app-strapi.env ./apps/app-strapi/.env
        chmod 600 ./apps/app-strapi/.env
        
        cp /root/.app-web.env ./apps/app-web/.env
        chmod 600 ./apps/app-web/.env
        
        echo "Environment files copied successfully"
    - name: Install dependencies
      run: pnpm install
    - name: Build shared-types
      run: |
        cd packages/shared-types
        pnpm run build
    - name: Build app-strapi
      run: |
        cd apps/app-strapi
        NODE_OPTIONS="--max-old-space-size=4096" pnpm run build
    - name: Build app-web
      run: |
        cd apps/app-web
        pnpm run build
    # - name: Test
    #   run: pnpm run test
    - name: Restart PM2 processes
      run: |
        # Set PM2 home directory
        export PM2_HOME=/root/.pm2
        
        # Try to connect to PM2 daemon, start it if not running
        if ! /usr/bin/pm2 ping > /dev/null 2>&1; then
          echo "PM2 daemon not running, starting it..."
          /usr/bin/pm2 resurrect || echo "No dump file found, skipping resurrect"
        fi
        
        # List current PM2 processes
        echo "Current PM2 processes:"
        /usr/bin/pm2 list
        
        # Stop and delete all processes if they exist
        /usr/bin/pm2 delete all || true
        
        # Start applications using ecosystem config
        echo "Starting applications with ecosystem config..."
        /usr/bin/pm2 start ecosystem.config.js --update-env
        
        # Show final PM2 status
        echo "Final PM2 status:"
        /usr/bin/pm2 list
        
        # Save PM2 process list
        /usr/bin/pm2 save --force
        
        # Wait a moment for processes to stabilize
        sleep 5
        
        # Show PM2 logs from all processes
        echo "=== PM2 Logs All ==="
        /usr/bin/pm2 logs all --nostream --lines 50
